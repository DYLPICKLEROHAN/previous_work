#runs has its own column
no._of_balls <- str_match(with_runs$description, "from ....")
no._of_balls
all_columns<- cbind(with_runs, no._of_balls)
#no.  of balls has its own column
batting_order <- str_replace_all(all_columns$order, "[^0-9.-]", "")
runs_ <- str_replace_all(all_columns$runs, "[^0-9.-]", "")
balls_ <- str_replace_all(all_columns$no._of_balls, "[^0-9.-]", "")
order1 <- tibble(batting_order)
runs1 <- tibble(runs_)
balls1 <- tibble(balls_)
a1_o <- cbind(ashes_innings_first, order1)
a1_o_r <- cbind(a1_o, runs1)
a1_o_r_b<- cbind(a1_o_r, balls1)
a1_o_r_b$description <- NULL
a1_o_r_b
#1.3
ashes_tibble <- as_tibble(a1_o_r_b)
ashes_tibble
ashes_tibble$batting_order <- as.factor(ashes_tibble$batting_order)
ashes_tibble$runs_ <- as.integer(ashes_tibble$runs_)
ashes_tibble$balls_ <- as.integer(ashes_tibble$balls_)
ashes_tibble
ashes_tibble$innings <- as.factor(ashes_tibble$innings)
#teams have a low number finite number of players, categorical variable = factor
ashes_tibble$batter <- as.factor(ashes_tibble$batter)
ashes_tibble$team <- as.factor(ashes_tibble$team)
ashes_tibble$role <- as.factor(ashes_tibble$role)
ashes_tibble <- mutate(ashes_tibble,batting_order = fct_recode(batting_order, "na"=""))
#1.4
summary(unique(ashes_tibble$batter))
summary(unique(ashes_tibble$innings))
summary(unique(ashes_tibble$team))
#English to England
ashes_corrected <- mutate(ashes_tibble, team = fct_recode(team, "England" = "English"))
unique(ashes_corrected$team)
unique(ashes_corrected$role)
ashes_corrected_ <- mutate(ashes_corrected,role = fct_recode(role, "all-rounder" = "allrounder", "all-rounder"="all rounder", "batsman"="batting", "batsman"="bat", "bowler"="bowl"))
unique(ashes_corrected_$role)
unique(ashes_co
unique(ashes_corrected_$role)
unique(ashes_corrected_$team)
ashes_tibble <- mutate(ashes_tibble,batting_order = fct_recode(batting_order, "NA"=""))
#1.4
summary(unique(ashes_tibble$batter))
summary(unique(ashes_tibble$innings))
summary(unique(ashes_tibble$team))
#English to England
ashes_corrected <- mutate(ashes_tibble, team = fct_recode(team, "England" = "English"))
unique(ashes_corrected$team)
unique(ashes_corrected$role)
ashes_corrected_ <- mutate(ashes_corrected,role = fct_recode(role, "all-rounder" = "allrounder", "all-rounder"="all rounder", "batsman"="batting", "batsman"="bat", "bowler"="bowl"))
unique(ashes_corrected_$role)
unique(ashes_corrected_$team)
library(tidyverse)
ashes <- read_csv("C:\\Users\\rohad\\OneDrive\\Documents\\Data science\\Data Taming, modelling and Vizalization_RStudio\\a1\\a1\\ashes.csv")
#double slashes for windows directory
ashes <- read_csv("ashes.csv")
#testing something mentioned in the discussion board, neat!
ashes
#Checking the table, currently a tibble of 27 x 13
unique(ashes$team)
#need to correct variable English to be England
unique(ashes$role)
#many duplicates under alternate variable names, eb. bat, batsman, batting
#1.1
colnames(ashes)
ashes_longform <- gather(ashes, key = "innings", value = "description", "Test 1, Innings 1" : "Test 5, Innings 2")
ashes_longform
#tibble now in long form
ashes_innings_first <- ashes_longform[c(4, 1, 2, 3, 5)]
ashes_innings_first
#tibble now in long form with subject first
#1.2
library(dplyr)
library(stringr)
library(tidyverse)
order <- str_match(ashes_innings_first$description, "Batting at number ..")
with_order <- cbind(ashes_innings_first, order)
with_order
#Order has its own column
runs <- str_match(with_order$description, "scored ....")
runs
with_runs <- cbind(with_order, runs)
#runs has its own column
no._of_balls <- str_match(with_runs$description, "from ....")
no._of_balls
all_columns<- cbind(with_runs, no._of_balls)
#no.  of balls has its own column
batting_order <- str_replace_all(all_columns$order, "[^0-9.-]", "")
runs_ <- str_replace_all(all_columns$runs, "[^0-9.-]", "")
balls_ <- str_replace_all(all_columns$no._of_balls, "[^0-9.-]", "")
order1 <- tibble(batting_order)
runs1 <- tibble(runs_)
balls1 <- tibble(balls_)
a1_o <- cbind(ashes_innings_first, order1)
a1_o_r <- cbind(a1_o, runs1)
a1_o_r_b<- cbind(a1_o_r, balls1)
a1_o_r_b$description <- NULL
a1_o_r_b
#1.3
ashes_tibble <- as_tibble(a1_o_r_b)
ashes_tibble
ashes_tibble$batting_order <- as.factor(ashes_tibble$batting_order)
ashes_tibble$runs_ <- as.integer(ashes_tibble$runs_)
ashes_tibble$balls_ <- as.integer(ashes_tibble$balls_)
ashes_tibble
ashes_tibble$innings <- as.factor(ashes_tibble$innings)
#teams have a low number finite number of players, categorical variable = factor
ashes_tibble$batter <- as.factor(ashes_tibble$batter)
ashes_tibble$team <- as.factor(ashes_tibble$team)
ashes_tibble$role <- as.factor(ashes_tibble$role)
ashes_tibble <- na.strings=c(""," ","NA")
#1.4
summary(unique(ashes_tibble$batter))
summary(unique(ashes_tibble$innings))
summary(unique(ashes_tibble$team))
#English to England
ashes_corrected <- mutate(ashes_tibble, team = fct_recode(team, "England" = "English"))
unique(ashes_corrected$team)
unique(ashes_corrected$role)
ashes_corrected_ <- mutate(ashes_corrected,role = fct_recode(role, "all-rounder" = "allrounder", "all-rounder"="all rounder", "batsman"="batting", "batsman"="bat", "bowler"="bowl"))
unique(ashes_corrected_$role)
unique(ashes_corrected_$team)
library(tidyverse)
ashes <- read_csv("C:\\Users\\rohad\\OneDrive\\Documents\\Data science\\Data Taming, modelling and Vizalization_RStudio\\a1\\a1\\ashes.csv")
#double slashes for windows directory
ashes <- read_csv("ashes.csv")
#testing something mentioned in the discussion board, neat!
ashes
#Checking the table, currently a tibble of 27 x 13
unique(ashes$team)
#need to correct variable English to be England
unique(ashes$role)
#many duplicates under alternate variable names, eb. bat, batsman, batting
#1.1
colnames(ashes)
ashes_longform <- gather(ashes, key = "innings", value = "description", "Test 1, Innings 1" : "Test 5, Innings 2")
ashes_longform
#tibble now in long form
ashes_innings_first <- ashes_longform[c(4, 1, 2, 3, 5)]
ashes_innings_first
#tibble now in long form with subject first
#1.2
library(dplyr)
library(stringr)
library(tidyverse)
order <- str_match(ashes_innings_first$description, "Batting at number ..")
with_order <- cbind(ashes_innings_first, order)
with_order
#Order has its own column
runs <- str_match(with_order$description, "scored ....")
runs
with_runs <- cbind(with_order, runs)
#runs has its own column
no._of_balls <- str_match(with_runs$description, "from ....")
no._of_balls
all_columns<- cbind(with_runs, no._of_balls)
#no.  of balls has its own column
batting_order <- str_replace_all(all_columns$order, "[^0-9.-]", "")
runs_ <- str_replace_all(all_columns$runs, "[^0-9.-]", "")
balls_ <- str_replace_all(all_columns$no._of_balls, "[^0-9.-]", "")
order1 <- tibble(batting_order)
runs1 <- tibble(runs_)
balls1 <- tibble(balls_)
a1_o <- cbind(ashes_innings_first, order1)
a1_o_r <- cbind(a1_o, runs1)
a1_o_r_b<- cbind(a1_o_r, balls1)
a1_o_r_b$description <- NULL
a1_o_r_b
#1.3
ashes_tibble <- as_tibble(a1_o_r_b)
ashes_tibble
ashes_tibble$batting_order <- as.factor(ashes_tibble$batting_order)
ashes_tibble$runs_ <- as.integer(ashes_tibble$runs_)
ashes_tibble$balls_ <- as.integer(ashes_tibble$balls_)
ashes_tibble
ashes_tibble$innings <- as.factor(ashes_tibble$innings)
#teams have a low number finite number of players, categorical variable = factor
ashes_tibble$batter <- as.factor(ashes_tibble$batter)
ashes_tibble$team <- as.factor(ashes_tibble$team)
ashes_tibble$role <- as.factor(ashes_tibble$role)
ashes_tibble <- ashes_tibble %>% mutate_all(na_if,"")
#1.4
summary(unique(ashes_tibble$batter))
summary(unique(ashes_tibble$innings))
summary(unique(ashes_tibble$team))
#English to England
ashes_corrected <- mutate(ashes_tibble, team = fct_recode(team, "England" = "English"))
unique(ashes_corrected$team)
unique(ashes_corrected$role)
ashes_corrected_ <- mutate(ashes_corrected,role = fct_recode(role, "all-rounder" = "allrounder", "all-rounder"="all rounder", "batsman"="batting", "batsman"="bat", "bowler"="bowl"))
unique(ashes_corrected_$role)
unique(ashes_corrected_$team)
ashes_corrected_
#teams have a low, finite number of players, categorical variable = factor
ashes_tibble$player <- ashes_tibble$batter
ashes_tibble
#teams have a low, finite number of players, categorical variable = factor
ashes_tibble$player <- rename(ashes_tibble$batter)
#teams have a low, finite number of players, categorical variable = factor
ashes_tibble <- rename(ashes_tibble,"player"="batter")
library(tidyverse)
ashes <- read_csv("C:\\Users\\rohad\\OneDrive\\Documents\\Data science\\Data Taming, modelling and Vizalization_RStudio\\a1\\a1\\ashes.csv")
#double slashes for windows directory
ashes <- read_csv("ashes.csv")
#testing something mentioned in the discussion board, neat!
ashes
#Checking the table, currently a tibble of 27 x 13
unique(ashes$team)
#need to correct variable English to be England
unique(ashes$role)
#many duplicates under alternate variable names, eb. bat, batsman, batting
#1.1
colnames(ashes)
ashes_longform <- gather(ashes, key = "innings", value = "description", "Test 1, Innings 1" : "Test 5, Innings 2")
ashes_longform
#tibble now in long form
ashes_innings_first <- ashes_longform[c(4, 1, 2, 3, 5)]
ashes_innings_first
#tibble now in long form with subject first
#1.2
library(dplyr)
library(stringr)
library(tidyverse)
order <- str_match(ashes_innings_first$description, "Batting at number ..")
with_order <- cbind(ashes_innings_first, order)
with_order
#Order now has its own column
runs <- str_match(with_order$description, "scored ....")
runs
with_runs <- cbind(with_order, runs)
#runs now has its own column
no._of_balls <- str_match(with_runs$description, "from ....")
no._of_balls
all_columns<- cbind(with_runs, no._of_balls)
#no.  of balls now has its own column
batting_order <- str_replace_all(all_columns$order, "[^0-9.-]", "")
runs_ <- str_replace_all(all_columns$runs, "[^0-9.-]", "")
balls_ <- str_replace_all(all_columns$no._of_balls, "[^0-9.-]", "")
#Taking numerical values from strings
order1 <- tibble(batting_order)
runs1 <- tibble(runs_)
balls1 <- tibble(balls_)
#making data frames from those values
a1_o <- cbind(ashes_innings_first, order1)
a1_o_r <- cbind(a1_o, runs1)
a1_o_r_b<- cbind(a1_o_r, balls1)
#Order same, so binding columns
a1_o_r_b$description <- NULL
#removing description column
a1_o_r_b
#1.3
ashes_tibble <- as_tibble(a1_o_r_b)
ashes_tibble
#making a data frame from a1_o_r_b to set vaue types
ashes_tibble$batting_order <- as.factor(ashes_tibble$batting_order)
#low level ordinal, label = factor
ashes_tibble$runs_ <- as.integer(ashes_tibble$runs_)
ashes_tibble$balls_ <- as.integer(ashes_tibble$balls_)
#countable, but discrete = integer
ashes_tibble
ashes_tibble$innings <- as.factor(ashes_tibble$innings)
#teams have a low, finite number of players, categorical variable = factor
ashes_tibble <- rename(ashes_tibble,"player"="batter")
ashes_tibble$batter <- as.factor(ashes_tibble$player)
ashes_tibble$team <- as.factor(ashes_tibble$team)
ashes_tibble$role <- as.factor(ashes_tibble$role)
#
ashes_tibble <- ashes_tibble %>% mutate_all(na_if,"")
#set batting order empty value cells to NA
#1.4
summary(unique(ashes_tibble$batter))
summary(unique(ashes_tibble$innings))
summary(unique(ashes_tibble$team))
#English to England
ashes_corrected <- mutate(ashes_tibble, team = fct_recode(team, "England" = "English"))
unique(ashes_corrected$team)
unique(ashes_corrected$role)
ashes_corrected_ <- mutate(ashes_corrected,role = fct_recode(role, "all-rounder" = "allrounder", "all-rounder"="all rounder", "batsman"="batting", "batsman"="bat", "bowler"="bowl"))
unique(ashes_corrected_$role)
unique(ashes_corrected_$team)
#setting NA to 0,
ashes_corrected_[is.na(ashes_corrected_)] <- 0
ashes_corrected_
library(tidyverse)
ashes <- read_csv("C:\\Users\\rohad\\OneDrive\\Documents\\Data science\\Data Taming, modelling and Vizalization_RStudio\\a1\\a1\\ashes.csv")
#double slashes for windows directory
ashes <- read_csv("ashes.csv")
#testing something mentioned in the discussion board, neat!
ashes
#Checking the table, currently a tibble of 27 x 13
unique(ashes$team)
#need to correct variable English to be England
unique(ashes$role)
#1.1
colnames(ashes)
ashes_longform <- gather(ashes, key = "innings", value = "description", "Test 1, Innings 1" : "Test 5, Innings 2")
ashes_longform
#tibble now in long form
ashes_innings_first <- ashes_longform[c(4, 1, 2, 3, 5)]
ashes_innings_first
#1.2
library(dplyr)
library(stringr)
library(tidyverse)
order <- str_match(ashes_innings_first$description, "Batting at number ..")
with_order <- cbind(ashes_innings_first, order)
with_order
#Order now has its own column
runs <- str_match(with_order$description, "scored ....")
runs
with_runs <- cbind(with_order, runs)
#runs now has its own column
no._of_balls <- str_match(with_runs$description, "from ....")
no._of_balls
all_columns<- cbind(with_runs, no._of_balls)
#no.  of balls now has its own column
batting_order <- str_replace_all(all_columns$order, "[^0-9.-]", "")
runs_ <- str_replace_all(all_columns$runs, "[^0-9.-]", "")
balls_ <- str_replace_all(all_columns$no._of_balls, "[^0-9.-]", "")
#Taking numerical values from strings
order1 <- tibble(batting_order)
runs1 <- tibble(runs_)
balls1 <- tibble(balls_)
#making data frames from those values
a1_o <- cbind(ashes_innings_first, order1)
a1_o_r <- cbind(a1_o, runs1)
a1_o_r_b<- cbind(a1_o_r, balls1)
#Order same, so binding columns
a1_o_r_b$description <- NULL
#removing description column
a1_o_r_b
#1.3
ashes_tibble <- as_tibble(a1_o_r_b)
ashes_tibble
View(ashes_tibble)
#making a data frame from a1_o_r_b to set vaue types
ashes_tibble$batting_order <- as.factor(ashes_tibble$batting_order)
#low level ordinal, label = factor
ashes_tibble$runs_ <- as.integer(ashes_tibble$runs_)
ashes_tibble$balls_ <- as.integer(ashes_tibble$balls_)
#countable, but discrete = integer
ashes_tibble
ashes_tibble$innings <- as.factor(ashes_tibble$innings)
#teams have a low, finite number of players, categorical variable = factor
ashes_tibble <- rename(ashes_tibble,"player"="batter")
ashes_tibble$player <- as.factor(ashes_tibble$player)
ashes_tibble$team <- as.factor(ashes_tibble$team)
ashes_tibble$role <- as.factor(ashes_tibble$role)
#
ashes_tibble <- ashes_tibble %>% mutate_all(na_if,"")
#1.4
summary(unique(ashes_tibble$batter))
summary(unique(ashes_tibble$innings))
summary(unique(ashes_tibble$team))
#English to England
ashes_corrected <- mutate(ashes_tibble, team = fct_recode(team, "England" = "English"))
unique(ashes_corrected$team)
unique(ashes_corrected$role)
ashes_corrected_ <- mutate(ashes_corrected,role = fct_recode(role, "all-rounder" = "allrounder", "all-rounder"="all rounder", "batsman"="batting", "batsman"="bat", "bowler"="bowl"))
unique(ashes_corrected_$role)
unique(ashes_corrected_$team)
#setting NA to 0,
ashes_corrected_[is.na(ashes_corrected_)] <- 0
ashes_corrected_
View(a1_o)
View(a1_o)
View(a1_o)
with_order
View(ashes_innings_first)
View(ashes_innings_first)
View(ashes_corrected_)
View(ashes_corrected_)
View(order)
View(order1)
View(a1_o_r)
View(a1_o_r_b)
View(ashes_corrected_)
View(ashes_corrected_)
ashes_corrected_
#1.4
summary(unique(ashes_tibble$batter))
#1.4
summary(unique(ashes_tibble$batter))
library(tidyverse)
ashes <- read_csv("C:\\Users\\rohad\\OneDrive\\Documents\\Data science\\Data Taming, modelling and Vizalization_RStudio\\a1\\a1\\ashes.csv")
#double slashes for windows directory
ashes <- read_csv("ashes.csv")
#testing something mentioned in the discussion board, neat!
ashes
#Checking the table, currently a tibble of 27 x 13
unique(ashes$team)
#need to correct variable English to be England
unique(ashes$role)
#many duplicates under alternate variable names, eb. bat, batsman, batting
#1.1
colnames(ashes)
ashes_longform <- gather(ashes, key = "innings", value = "description", "Test 1, Innings 1" : "Test 5, Innings 2")
ashes_longform
#tibble now in long form
ashes_innings_first <- ashes_longform[c(4, 1, 2, 3, 5)]
ashes_innings_first
#tibble now in long form with subject first
#1.2
library(dplyr)
library(stringr)
library(tidyverse)
order <- str_match(ashes_innings_first$description, "Batting at number ..")
with_order <- cbind(ashes_innings_first, order)
with_order
#Order now has its own column
runs <- str_match(with_order$description, "scored ....")
runs
with_runs <- cbind(with_order, runs)
#runs now has its own column
no._of_balls <- str_match(with_runs$description, "from ....")
no._of_balls
all_columns<- cbind(with_runs, no._of_balls)
#no.  of balls now has its own column
batting_order <- str_replace_all(all_columns$order, "[^0-9.-]", "")
runs_ <- str_replace_all(all_columns$runs, "[^0-9.-]", "")
balls_ <- str_replace_all(all_columns$no._of_balls, "[^0-9.-]", "")
#Taking numerical values from strings
order1 <- tibble(batting_order)
runs1 <- tibble(runs_)
balls1 <- tibble(balls_)
#making data frames from those values
a1_o <- cbind(ashes_innings_first, order1)
a1_o_r <- cbind(a1_o, runs1)
a1_o_r_b<- cbind(a1_o_r, balls1)
#Order same, so binding columns
a1_o_r_b$description <- NULL
#removing description column
a1_o_r_b
#1.3
ashes_tibble <- as_tibble(a1_o_r_b)
ashes_tibble
#making a data frame from a1_o_r_b to set vaue types
ashes_tibble$batting_order <- as.factor(ashes_tibble$batting_order)
#low level ordinal, label = factor
ashes_tibble$runs_ <- as.integer(ashes_tibble$runs_)
ashes_tibble$balls_ <- as.integer(ashes_tibble$balls_)
#countable, but discrete = integer
ashes_tibble
ashes_tibble$innings <- as.factor(ashes_tibble$innings)
#innings total=10, label/name, low level count so values are factors
ashes_tibble <- rename(ashes_tibble,"player"="batter")
ashes_tibble$player <- as.factor(ashes_tibble$player)
#teams have a low, finite number of players, categorical variable = factor
ashes_tibble$team <- as.factor(ashes_tibble$team)
ashes_tibble$role <- as.factor(ashes_tibble$role)
#both low value labels, so factors
ashes_tibble <- ashes_tibble %>% mutate_all(na_if,"")
#set batting order empty value cells to NA
#1.4
summary(unique(ashes_tibble$batter))
summary(unique(ashes_tibble$innings))
summary(unique(ashes_tibble$team))
#English to England
ashes_corrected <- mutate(ashes_tibble, team = fct_recode(team, "England" = "English"))
unique(ashes_corrected$team)
unique(ashes_corrected$role)
ashes_corrected_ <- mutate(ashes_corrected,role = fct_recode(role, "all-rounder" = "allrounder", "all-rounder"="all rounder", "batsman"="batting", "batsman"="bat", "bowler"="bowl"))
unique(ashes_corrected_$role)
unique(ashes_corrected_$team)
#setting 0 to NA,
ashes_corrected_[is.na(ashes_corrected_)] <- 0
ashes_corrected_
#1.4
summary(unique(ashes_tibble$batter))
source("~/Data science/Data Taming, modelling and Vizalization_RStudio/a1/a1/a1_script.R", echo=TRUE)
#1.4
summary(unique(ashes_tibble$player))
summary(unique(ashes_tibble$team))
#English to England
ashes_corrected <- mutate(ashes_tibble, team = fct_recode(team, "England" = "English"))
unique(ashes_corrected$team)
unique(ashes_corrected$role)
View(ashes_corrected_)
unique(ashes_corrected_$role)
unique(ashes_corrected_$team)
View(ashes_corrected)
ashes_corrected_
View(ashes_corrected_)
View(ashes_corrected_)
ggplot(ashes_corrected_, aes(x=player, y=runs))+geom_histogram()
ggplot(ashes_corrected_,mapping = aes(x=player, y=runs))+geom_histogram()
ggplot(ashes_corrected_,mapping = aes(x=balls, y=runs))+geom_histogram()
ggplot(ashes_corrected_,mapping = aes(x=balls_, y=runs_))+geom_histogram()
ggplot(ashes_corrected_)+geom_histogram(mapping = aes(x=balls_, y=runs_))
ggplot(ashes_corrected_)+geom_histogram(mapping = aes(x=balls_))
ggplot(ashes_corrected_)+geom_histogram(mapping = aes(x=runs_))
ggplot(ashes_corrected_)+geom_histogram(mapping = aes(x=runs_))+geom_histogram(mapping = aes(y=balls_))
ggplot(ashes_corrected_)+geom_histogram(mapping = aes(x=runs_))+geom_histogram(mapping = aes(x=balls_))
ggplot(ashes_corrected_)+geom_histogram(mapping = aes(x=runs_))+geom_histogram(mapping = aes(y=balls_))
ggplot(ashes_corrected_)+geom_histogram(mapping = aes(x=runs_)))
ggplot(ashes_corrected_)+geom_histogram(mapping = aes(x=runs_)))
ggplot(ashes_corrected_)+geom_histogram(mapping = aes(x=runs_))
install.packages(c("backports", "broom", "cli", "colorspace", "commonmark", "digest", "discrim", "dplyr", "fansi", "fs", "glue", "gower", "jsonlite", "magrittr", "parsnip", "Rcpp", "readr", "recipes", "rlang", "stringi", "tibble", "tidyr", "tzdb", "xfun", "xml2"))
install.packages(c("backports", "broom", "cli", "colorspace", "commonmark", "digest", "discrim", "dplyr", "fansi", "fs", "glue", "gower", "jsonlite", "magrittr", "parsnip", "Rcpp", "readr", "recipes", "rlang", "stringi", "tibble", "tidyr", "tzdb", "xfun", "xml2"))
install.packages(c("backports", "broom", "cli", "colorspace", "commonmark", "digest", "discrim", "dplyr", "fansi", "fs", "glue", "gower", "jsonlite", "magrittr", "parsnip", "Rcpp", "readr", "recipes", "rlang", "stringi", "tibble", "tidyr", "tzdb", "xfun", "xml2"))
install.packages(c("backports", "broom", "cli", "colorspace", "commonmark", "digest", "discrim", "dplyr", "fansi", "fs", "glue", "gower", "jsonlite", "magrittr", "parsnip", "Rcpp", "readr", "recipes", "rlang", "stringi", "tibble", "tidyr", "tzdb", "xfun", "xml2"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
update.packages(tidyverse)
update.packages("tidyverse")
library(tidyverse)
library(tidyverse)
install.packages(c("cli", "commonmark", "digest", "discrim", "parsnip", "rlang"))
library(tidyverse)
```{r setup, include=FALSE}
